<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.API</name>
    </assembly>
    <members>
        <member name="T:CMS.API.Controllers.CustomerController">
            <summary>
            REST API Ends for Managing Customers in system
            </summary>
        </member>
        <member name="M:CMS.API.Controllers.CustomerController.Get">
            <summary>
            Retrieves a list of customers
            </summary>
            <returns>A response with list of customers</returns>
            <response code="200">Returns the Customer List</response>
            <response code="404">If Customer is not exists</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:CMS.API.Controllers.CustomerController.Get(System.Int32)">
            <summary>
            Retrieves a Cutomer by customer ID
            </summary>
            <param name="id">Customer ID</param>
            <returns>A response with Customer Item</returns>
            <response code="200">Returns the Customer List</response>
            <response code="404">If Customer is not exists</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:CMS.API.Controllers.CustomerController.Post(CMS.Application.ApiModels.CustomerModel)">
            <remarks>
            Sample request:
            {
              FirstName = "FN",
              LastName = "LN"
            }
            </remarks>
            <summary>
            Creates a new customer in the system
            </summary>
            <param name="customerModel">Customer Models</param>
            <returns>A response with new customer</returns>
            <response code="201">A response as creation of customer</response>
            <response code="400">For bad request</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:CMS.API.Controllers.CustomerController.Put(System.Int32,CMS.Application.ApiModels.CustomerModel)">
            <summary>
            Update an existing customer item
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="customerModel">Request model</param>
            <returns>A response with updated customer</returns>
            <response code="200">If Customer item was updated successfully</response>
            <response code="400">For bad request</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:CMS.API.Controllers.CustomerController.Delete(System.Int32)">
            <summary>
            Delete an existing customer item
            </summary>
            <param name="id">Customer Id</param>
            <returns>A response as Customer deleted from system</returns>
            <response code="200">If Customer item was Deleted successfully</response>
            <response code="404">If Customer is not exists</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="T:CMS.API.Startup">
            <summary>
            Entry point to application startup
            </summary>
        </member>
        <member name="M:CMS.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            ctor of startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:CMS.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:CMS.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
